CCS PCM C Compiler, Version 4.088, 5967               13-jul-17 14:04

               Filename: C:\Users\Administrator\Desktop\Programs\4\4.lst

               ROM used: 1027 words (13%)
                         Largest free fragment is 2048
               RAM used: 21 (6%) at main() level
                         21 (6%) worst case
               Stack:    1 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   018
0003:  NOP
.................... #include <16F877.h> 
.................... //////// Standard Header file for the PIC16F877 device //////////////// 
.................... #device PIC16F877 
.................... #list 
....................  
.................... #fuses HS,NOWDT,NOPROTECT,NOLVP 
.................... #use delay(clock=20000000) 
*
0004:  MOVLW  2E
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  06
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  7B
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  RETLW  00
.................... #define DELAY_COUNTER_VALUE    10000 
.................... #define ZERO  0b00111111 
.................... #define UNO  0b00000110 
.................... #define DOS  0b01011011 
.................... #define TRES  0b01001111 
.................... #define CUATRO  0b01100110 
.................... #define CINCO  0b01101101 
.................... #define SEIS  0b01111101 
.................... #define SIETE  0b00000111 
.................... #define OCHO  0b01111111 
.................... #define NUEVE  0b01100111 
....................  
....................  
....................  
....................  
.................... void main(void) 
.................... { 
0018:  CLRF   04
0019:  BCF    03.7
001A:  MOVLW  1F
001B:  ANDWF  03,F
001C:  BSF    03.5
001D:  BSF    1F.0
001E:  BSF    1F.1
001F:  BSF    1F.2
0020:  BCF    1F.3
.................... int16 x = 1; 
*
0024:  MOVLW  01
0025:  MOVWF  21
0026:  CLRF   22
.................... int i; 
.................... int num[10] = {ZERO,UNO,DOS,TRES,CUATRO,CINCO,SEIS,SIETE,OCHO,NUEVE}; 
0027:  MOVLW  3F
0028:  MOVWF  24
0029:  MOVLW  06
002A:  MOVWF  25
002B:  MOVLW  5B
002C:  MOVWF  26
002D:  MOVLW  4F
002E:  MOVWF  27
002F:  MOVLW  66
0030:  MOVWF  28
0031:  MOVLW  6D
0032:  MOVWF  29
0033:  MOVLW  7D
0034:  MOVWF  2A
0035:  MOVLW  07
0036:  MOVWF  2B
0037:  MOVLW  7F
0038:  MOVWF  2C
0039:  MOVLW  67
003A:  MOVWF  2D
.................... set_tris_d(0x00); 
003B:  MOVLW  00
003C:  BSF    03.5
003D:  MOVWF  08
.................... set_tris_b(0x00); 
003E:  MOVWF  06
.................... set_tris_a(0x00); 
003F:  MOVWF  05
.................... set_tris_c(0x00); 
0040:  MOVWF  07
0041:  BCF    03.5
0042:  MOVWF  20
.................... //set_tris_c(0xff); 
....................  
....................  
.................... while(1){ 
.................... //x = input(PIN_C5); 
....................  
....................    while(x==1){ 
0043:  DECFSZ 21,W
0044:  GOTO   401
0045:  MOVF   22,F
0046:  BTFSS  03.2
0047:  GOTO   401
....................    if(input(PIN_A4)== 1){ 
0048:  BSF    03.5
0049:  BSF    05.4
004A:  BCF    03.5
004B:  BTFSS  05.4
004C:  GOTO   22A
....................    for(i=0;i<50;i++){ 
004D:  CLRF   23
004E:  MOVF   23,W
004F:  SUBLW  31
0050:  BTFSS  03.0
0051:  GOTO   082
....................       output_LOW(PIN_C1); 
0052:  BCF    20.1
0053:  MOVF   20,W
0054:  BSF    03.5
0055:  MOVWF  07
0056:  BCF    03.5
0057:  BCF    07.1
....................       output_HIGH(PIN_C0); 
0058:  BCF    20.0
0059:  MOVF   20,W
005A:  BSF    03.5
005B:  MOVWF  07
005C:  BCF    03.5
005D:  BSF    07.0
....................       output_d(ZERO); 
005E:  BSF    03.5
005F:  CLRF   08
0060:  MOVLW  3F
0061:  BCF    03.5
0062:  MOVWF  08
....................       delay_ms(10); 
0063:  MOVLW  0A
0064:  MOVWF  2E
0065:  CALL   004
....................       output_LOW(PIN_C0); 
0066:  BCF    20.0
0067:  MOVF   20,W
0068:  BSF    03.5
0069:  MOVWF  07
006A:  BCF    03.5
006B:  BCF    07.0
....................       output_HIGH(PIN_C1); 
006C:  BCF    20.1
006D:  MOVF   20,W
006E:  BSF    03.5
006F:  MOVWF  07
0070:  BCF    03.5
0071:  BSF    07.1
....................       output_d(num[i]); 
0072:  MOVLW  24
0073:  ADDWF  23,W
0074:  MOVWF  04
0075:  BCF    03.7
0076:  MOVF   00,W
0077:  MOVWF  2E
0078:  BSF    03.5
0079:  CLRF   08
007A:  BCF    03.5
007B:  MOVF   2E,W
007C:  MOVWF  08
....................       delay_ms(10); 
007D:  MOVLW  0A
007E:  MOVWF  2E
007F:  CALL   004
....................        
....................    } 
0080:  INCF   23,F
0081:  GOTO   04E
....................    for(i=0;i<50;i++){ 
0082:  CLRF   23
0083:  MOVF   23,W
0084:  SUBLW  31
0085:  BTFSS  03.0
0086:  GOTO   0B1
....................       output_LOW(PIN_C1); 
0087:  BCF    20.1
0088:  MOVF   20,W
0089:  BSF    03.5
008A:  MOVWF  07
008B:  BCF    03.5
008C:  BCF    07.1
....................       output_HIGH(PIN_C0); 
008D:  BCF    20.0
008E:  MOVF   20,W
008F:  BSF    03.5
0090:  MOVWF  07
0091:  BCF    03.5
0092:  BSF    07.0
....................       output_d(ZERO); 
0093:  BSF    03.5
0094:  CLRF   08
0095:  MOVLW  3F
0096:  BCF    03.5
0097:  MOVWF  08
....................       delay_ms(10); 
0098:  MOVLW  0A
0099:  MOVWF  2E
009A:  CALL   004
....................       output_LOW(PIN_C0); 
009B:  BCF    20.0
009C:  MOVF   20,W
009D:  BSF    03.5
009E:  MOVWF  07
009F:  BCF    03.5
00A0:  BCF    07.0
....................       output_HIGH(PIN_C1); 
00A1:  BCF    20.1
00A2:  MOVF   20,W
00A3:  BSF    03.5
00A4:  MOVWF  07
00A5:  BCF    03.5
00A6:  BSF    07.1
....................       output_d(UNO); 
00A7:  BSF    03.5
00A8:  CLRF   08
00A9:  MOVLW  06
00AA:  BCF    03.5
00AB:  MOVWF  08
....................       delay_ms(10); 
00AC:  MOVLW  0A
00AD:  MOVWF  2E
00AE:  CALL   004
....................        
....................    } 
00AF:  INCF   23,F
00B0:  GOTO   083
....................    for(i=0;i<50;i++){ 
00B1:  CLRF   23
00B2:  MOVF   23,W
00B3:  SUBLW  31
00B4:  BTFSS  03.0
00B5:  GOTO   0E0
....................       output_LOW(PIN_C1); 
00B6:  BCF    20.1
00B7:  MOVF   20,W
00B8:  BSF    03.5
00B9:  MOVWF  07
00BA:  BCF    03.5
00BB:  BCF    07.1
....................       output_HIGH(PIN_C0); 
00BC:  BCF    20.0
00BD:  MOVF   20,W
00BE:  BSF    03.5
00BF:  MOVWF  07
00C0:  BCF    03.5
00C1:  BSF    07.0
....................       output_d(ZERO); 
00C2:  BSF    03.5
00C3:  CLRF   08
00C4:  MOVLW  3F
00C5:  BCF    03.5
00C6:  MOVWF  08
....................       delay_ms(10); 
00C7:  MOVLW  0A
00C8:  MOVWF  2E
00C9:  CALL   004
....................       output_LOW(PIN_C0); 
00CA:  BCF    20.0
00CB:  MOVF   20,W
00CC:  BSF    03.5
00CD:  MOVWF  07
00CE:  BCF    03.5
00CF:  BCF    07.0
....................       output_HIGH(PIN_C1); 
00D0:  BCF    20.1
00D1:  MOVF   20,W
00D2:  BSF    03.5
00D3:  MOVWF  07
00D4:  BCF    03.5
00D5:  BSF    07.1
....................       output_d(DOS); 
00D6:  BSF    03.5
00D7:  CLRF   08
00D8:  MOVLW  5B
00D9:  BCF    03.5
00DA:  MOVWF  08
....................       delay_ms(10); 
00DB:  MOVLW  0A
00DC:  MOVWF  2E
00DD:  CALL   004
....................        
....................    } 
00DE:  INCF   23,F
00DF:  GOTO   0B2
....................    for(i=0;i<50;i++){ 
00E0:  CLRF   23
00E1:  MOVF   23,W
00E2:  SUBLW  31
00E3:  BTFSS  03.0
00E4:  GOTO   10F
....................       output_LOW(PIN_C1); 
00E5:  BCF    20.1
00E6:  MOVF   20,W
00E7:  BSF    03.5
00E8:  MOVWF  07
00E9:  BCF    03.5
00EA:  BCF    07.1
....................       output_HIGH(PIN_C0); 
00EB:  BCF    20.0
00EC:  MOVF   20,W
00ED:  BSF    03.5
00EE:  MOVWF  07
00EF:  BCF    03.5
00F0:  BSF    07.0
....................       output_d(ZERO); 
00F1:  BSF    03.5
00F2:  CLRF   08
00F3:  MOVLW  3F
00F4:  BCF    03.5
00F5:  MOVWF  08
....................       delay_ms(10); 
00F6:  MOVLW  0A
00F7:  MOVWF  2E
00F8:  CALL   004
....................       output_LOW(PIN_C0); 
00F9:  BCF    20.0
00FA:  MOVF   20,W
00FB:  BSF    03.5
00FC:  MOVWF  07
00FD:  BCF    03.5
00FE:  BCF    07.0
....................       output_HIGH(PIN_C1); 
00FF:  BCF    20.1
0100:  MOVF   20,W
0101:  BSF    03.5
0102:  MOVWF  07
0103:  BCF    03.5
0104:  BSF    07.1
....................       output_d(TRES); 
0105:  BSF    03.5
0106:  CLRF   08
0107:  MOVLW  4F
0108:  BCF    03.5
0109:  MOVWF  08
....................       delay_ms(10); 
010A:  MOVLW  0A
010B:  MOVWF  2E
010C:  CALL   004
....................        
....................    } 
010D:  INCF   23,F
010E:  GOTO   0E1
....................    for(i=0;i<50;i++){ 
010F:  CLRF   23
0110:  MOVF   23,W
0111:  SUBLW  31
0112:  BTFSS  03.0
0113:  GOTO   13E
....................       output_LOW(PIN_C1); 
0114:  BCF    20.1
0115:  MOVF   20,W
0116:  BSF    03.5
0117:  MOVWF  07
0118:  BCF    03.5
0119:  BCF    07.1
....................       output_HIGH(PIN_C0); 
011A:  BCF    20.0
011B:  MOVF   20,W
011C:  BSF    03.5
011D:  MOVWF  07
011E:  BCF    03.5
011F:  BSF    07.0
....................       output_d(ZERO); 
0120:  BSF    03.5
0121:  CLRF   08
0122:  MOVLW  3F
0123:  BCF    03.5
0124:  MOVWF  08
....................       delay_ms(10); 
0125:  MOVLW  0A
0126:  MOVWF  2E
0127:  CALL   004
....................       output_LOW(PIN_C0); 
0128:  BCF    20.0
0129:  MOVF   20,W
012A:  BSF    03.5
012B:  MOVWF  07
012C:  BCF    03.5
012D:  BCF    07.0
....................       output_HIGH(PIN_C1); 
012E:  BCF    20.1
012F:  MOVF   20,W
0130:  BSF    03.5
0131:  MOVWF  07
0132:  BCF    03.5
0133:  BSF    07.1
....................       output_d(CUATRO); 
0134:  BSF    03.5
0135:  CLRF   08
0136:  MOVLW  66
0137:  BCF    03.5
0138:  MOVWF  08
....................       delay_ms(10); 
0139:  MOVLW  0A
013A:  MOVWF  2E
013B:  CALL   004
....................        
....................    } 
013C:  INCF   23,F
013D:  GOTO   110
....................    for(i=0;i<50;i++){ 
013E:  CLRF   23
013F:  MOVF   23,W
0140:  SUBLW  31
0141:  BTFSS  03.0
0142:  GOTO   16D
....................       output_LOW(PIN_C1); 
0143:  BCF    20.1
0144:  MOVF   20,W
0145:  BSF    03.5
0146:  MOVWF  07
0147:  BCF    03.5
0148:  BCF    07.1
....................       output_HIGH(PIN_C0); 
0149:  BCF    20.0
014A:  MOVF   20,W
014B:  BSF    03.5
014C:  MOVWF  07
014D:  BCF    03.5
014E:  BSF    07.0
....................       output_d(ZERO); 
014F:  BSF    03.5
0150:  CLRF   08
0151:  MOVLW  3F
0152:  BCF    03.5
0153:  MOVWF  08
....................       delay_ms(10); 
0154:  MOVLW  0A
0155:  MOVWF  2E
0156:  CALL   004
....................       output_LOW(PIN_C0); 
0157:  BCF    20.0
0158:  MOVF   20,W
0159:  BSF    03.5
015A:  MOVWF  07
015B:  BCF    03.5
015C:  BCF    07.0
....................       output_HIGH(PIN_C1); 
015D:  BCF    20.1
015E:  MOVF   20,W
015F:  BSF    03.5
0160:  MOVWF  07
0161:  BCF    03.5
0162:  BSF    07.1
....................       output_d(CINCO); 
0163:  BSF    03.5
0164:  CLRF   08
0165:  MOVLW  6D
0166:  BCF    03.5
0167:  MOVWF  08
....................       delay_ms(10); 
0168:  MOVLW  0A
0169:  MOVWF  2E
016A:  CALL   004
....................        
....................    } 
016B:  INCF   23,F
016C:  GOTO   13F
....................    for(i=0;i<50;i++){ 
016D:  CLRF   23
016E:  MOVF   23,W
016F:  SUBLW  31
0170:  BTFSS  03.0
0171:  GOTO   19C
....................       output_LOW(PIN_C1); 
0172:  BCF    20.1
0173:  MOVF   20,W
0174:  BSF    03.5
0175:  MOVWF  07
0176:  BCF    03.5
0177:  BCF    07.1
....................       output_HIGH(PIN_C0); 
0178:  BCF    20.0
0179:  MOVF   20,W
017A:  BSF    03.5
017B:  MOVWF  07
017C:  BCF    03.5
017D:  BSF    07.0
....................       output_d(ZERO); 
017E:  BSF    03.5
017F:  CLRF   08
0180:  MOVLW  3F
0181:  BCF    03.5
0182:  MOVWF  08
....................       delay_ms(10); 
0183:  MOVLW  0A
0184:  MOVWF  2E
0185:  CALL   004
....................       output_LOW(PIN_C0); 
0186:  BCF    20.0
0187:  MOVF   20,W
0188:  BSF    03.5
0189:  MOVWF  07
018A:  BCF    03.5
018B:  BCF    07.0
....................       output_HIGH(PIN_C1); 
018C:  BCF    20.1
018D:  MOVF   20,W
018E:  BSF    03.5
018F:  MOVWF  07
0190:  BCF    03.5
0191:  BSF    07.1
....................       output_d(SEIS); 
0192:  BSF    03.5
0193:  CLRF   08
0194:  MOVLW  7D
0195:  BCF    03.5
0196:  MOVWF  08
....................       delay_ms(10); 
0197:  MOVLW  0A
0198:  MOVWF  2E
0199:  CALL   004
....................        
....................    } 
019A:  INCF   23,F
019B:  GOTO   16E
....................    for(i=0;i<50;i++){ 
019C:  CLRF   23
019D:  MOVF   23,W
019E:  SUBLW  31
019F:  BTFSS  03.0
01A0:  GOTO   1CB
....................       output_LOW(PIN_C1); 
01A1:  BCF    20.1
01A2:  MOVF   20,W
01A3:  BSF    03.5
01A4:  MOVWF  07
01A5:  BCF    03.5
01A6:  BCF    07.1
....................       output_HIGH(PIN_C0); 
01A7:  BCF    20.0
01A8:  MOVF   20,W
01A9:  BSF    03.5
01AA:  MOVWF  07
01AB:  BCF    03.5
01AC:  BSF    07.0
....................       output_d(ZERO); 
01AD:  BSF    03.5
01AE:  CLRF   08
01AF:  MOVLW  3F
01B0:  BCF    03.5
01B1:  MOVWF  08
....................       delay_ms(10); 
01B2:  MOVLW  0A
01B3:  MOVWF  2E
01B4:  CALL   004
....................       output_LOW(PIN_C0); 
01B5:  BCF    20.0
01B6:  MOVF   20,W
01B7:  BSF    03.5
01B8:  MOVWF  07
01B9:  BCF    03.5
01BA:  BCF    07.0
....................       output_HIGH(PIN_C1); 
01BB:  BCF    20.1
01BC:  MOVF   20,W
01BD:  BSF    03.5
01BE:  MOVWF  07
01BF:  BCF    03.5
01C0:  BSF    07.1
....................       output_d(SIETE); 
01C1:  BSF    03.5
01C2:  CLRF   08
01C3:  MOVLW  07
01C4:  BCF    03.5
01C5:  MOVWF  08
....................       delay_ms(10); 
01C6:  MOVLW  0A
01C7:  MOVWF  2E
01C8:  CALL   004
....................        
....................    } 
01C9:  INCF   23,F
01CA:  GOTO   19D
....................    for(i=0;i<50;i++){ 
01CB:  CLRF   23
01CC:  MOVF   23,W
01CD:  SUBLW  31
01CE:  BTFSS  03.0
01CF:  GOTO   1FA
....................       output_LOW(PIN_C1); 
01D0:  BCF    20.1
01D1:  MOVF   20,W
01D2:  BSF    03.5
01D3:  MOVWF  07
01D4:  BCF    03.5
01D5:  BCF    07.1
....................       output_HIGH(PIN_C0); 
01D6:  BCF    20.0
01D7:  MOVF   20,W
01D8:  BSF    03.5
01D9:  MOVWF  07
01DA:  BCF    03.5
01DB:  BSF    07.0
....................       output_d(ZERO); 
01DC:  BSF    03.5
01DD:  CLRF   08
01DE:  MOVLW  3F
01DF:  BCF    03.5
01E0:  MOVWF  08
....................       delay_ms(10); 
01E1:  MOVLW  0A
01E2:  MOVWF  2E
01E3:  CALL   004
....................       output_LOW(PIN_C0); 
01E4:  BCF    20.0
01E5:  MOVF   20,W
01E6:  BSF    03.5
01E7:  MOVWF  07
01E8:  BCF    03.5
01E9:  BCF    07.0
....................       output_HIGH(PIN_C1); 
01EA:  BCF    20.1
01EB:  MOVF   20,W
01EC:  BSF    03.5
01ED:  MOVWF  07
01EE:  BCF    03.5
01EF:  BSF    07.1
....................       output_d(OCHO); 
01F0:  BSF    03.5
01F1:  CLRF   08
01F2:  MOVLW  7F
01F3:  BCF    03.5
01F4:  MOVWF  08
....................       delay_ms(10); 
01F5:  MOVLW  0A
01F6:  MOVWF  2E
01F7:  CALL   004
....................        
....................    } 
01F8:  INCF   23,F
01F9:  GOTO   1CC
....................    for(i=0;i<50;i++){ 
01FA:  CLRF   23
01FB:  MOVF   23,W
01FC:  SUBLW  31
01FD:  BTFSS  03.0
01FE:  GOTO   229
....................       output_LOW(PIN_C1); 
01FF:  BCF    20.1
0200:  MOVF   20,W
0201:  BSF    03.5
0202:  MOVWF  07
0203:  BCF    03.5
0204:  BCF    07.1
....................       output_HIGH(PIN_C0); 
0205:  BCF    20.0
0206:  MOVF   20,W
0207:  BSF    03.5
0208:  MOVWF  07
0209:  BCF    03.5
020A:  BSF    07.0
....................       output_d(ZERO); 
020B:  BSF    03.5
020C:  CLRF   08
020D:  MOVLW  3F
020E:  BCF    03.5
020F:  MOVWF  08
....................       delay_ms(10); 
0210:  MOVLW  0A
0211:  MOVWF  2E
0212:  CALL   004
....................       output_LOW(PIN_C0); 
0213:  BCF    20.0
0214:  MOVF   20,W
0215:  BSF    03.5
0216:  MOVWF  07
0217:  BCF    03.5
0218:  BCF    07.0
....................       output_HIGH(PIN_C1); 
0219:  BCF    20.1
021A:  MOVF   20,W
021B:  BSF    03.5
021C:  MOVWF  07
021D:  BCF    03.5
021E:  BSF    07.1
....................       output_d(NUEVE); 
021F:  BSF    03.5
0220:  CLRF   08
0221:  MOVLW  67
0222:  BCF    03.5
0223:  MOVWF  08
....................       delay_ms(10); 
0224:  MOVLW  0A
0225:  MOVWF  2E
0226:  CALL   004
....................        
....................    } 
0227:  INCF   23,F
0228:  GOTO   1FB
....................     
....................     
....................    
....................  
.................... } 
.................... else{ 
0229:  GOTO   400
....................    for(i=0;i<50;i++){ 
022A:  CLRF   23
022B:  MOVF   23,W
022C:  SUBLW  31
022D:  BTFSS  03.0
022E:  GOTO   259
....................       output_LOW(PIN_C1); 
022F:  BCF    20.1
0230:  MOVF   20,W
0231:  BSF    03.5
0232:  MOVWF  07
0233:  BCF    03.5
0234:  BCF    07.1
....................       output_HIGH(PIN_C0); 
0235:  BCF    20.0
0236:  MOVF   20,W
0237:  BSF    03.5
0238:  MOVWF  07
0239:  BCF    03.5
023A:  BSF    07.0
....................       output_d(ZERO); 
023B:  BSF    03.5
023C:  CLRF   08
023D:  MOVLW  3F
023E:  BCF    03.5
023F:  MOVWF  08
....................       delay_ms(10); 
0240:  MOVLW  0A
0241:  MOVWF  2E
0242:  CALL   004
....................       output_LOW(PIN_C0); 
0243:  BCF    20.0
0244:  MOVF   20,W
0245:  BSF    03.5
0246:  MOVWF  07
0247:  BCF    03.5
0248:  BCF    07.0
....................       output_HIGH(PIN_C1); 
0249:  BCF    20.1
024A:  MOVF   20,W
024B:  BSF    03.5
024C:  MOVWF  07
024D:  BCF    03.5
024E:  BSF    07.1
....................       output_d(NUEVE); 
024F:  BSF    03.5
0250:  CLRF   08
0251:  MOVLW  67
0252:  BCF    03.5
0253:  MOVWF  08
....................       delay_ms(10); 
0254:  MOVLW  0A
0255:  MOVWF  2E
0256:  CALL   004
....................        
....................    } 
0257:  INCF   23,F
0258:  GOTO   22B
....................    for(i=0;i<50;i++){ 
0259:  CLRF   23
025A:  MOVF   23,W
025B:  SUBLW  31
025C:  BTFSS  03.0
025D:  GOTO   288
....................       output_LOW(PIN_C1); 
025E:  BCF    20.1
025F:  MOVF   20,W
0260:  BSF    03.5
0261:  MOVWF  07
0262:  BCF    03.5
0263:  BCF    07.1
....................       output_HIGH(PIN_C0); 
0264:  BCF    20.0
0265:  MOVF   20,W
0266:  BSF    03.5
0267:  MOVWF  07
0268:  BCF    03.5
0269:  BSF    07.0
....................       output_d(ZERO); 
026A:  BSF    03.5
026B:  CLRF   08
026C:  MOVLW  3F
026D:  BCF    03.5
026E:  MOVWF  08
....................       delay_ms(10); 
026F:  MOVLW  0A
0270:  MOVWF  2E
0271:  CALL   004
....................       output_LOW(PIN_C0); 
0272:  BCF    20.0
0273:  MOVF   20,W
0274:  BSF    03.5
0275:  MOVWF  07
0276:  BCF    03.5
0277:  BCF    07.0
....................       output_HIGH(PIN_C1); 
0278:  BCF    20.1
0279:  MOVF   20,W
027A:  BSF    03.5
027B:  MOVWF  07
027C:  BCF    03.5
027D:  BSF    07.1
....................       output_d(OCHO); 
027E:  BSF    03.5
027F:  CLRF   08
0280:  MOVLW  7F
0281:  BCF    03.5
0282:  MOVWF  08
....................       delay_ms(10); 
0283:  MOVLW  0A
0284:  MOVWF  2E
0285:  CALL   004
....................        
....................    } 
0286:  INCF   23,F
0287:  GOTO   25A
....................    for(i=0;i<50;i++){ 
0288:  CLRF   23
0289:  MOVF   23,W
028A:  SUBLW  31
028B:  BTFSS  03.0
028C:  GOTO   2B7
....................       output_LOW(PIN_C1); 
028D:  BCF    20.1
028E:  MOVF   20,W
028F:  BSF    03.5
0290:  MOVWF  07
0291:  BCF    03.5
0292:  BCF    07.1
....................       output_HIGH(PIN_C0); 
0293:  BCF    20.0
0294:  MOVF   20,W
0295:  BSF    03.5
0296:  MOVWF  07
0297:  BCF    03.5
0298:  BSF    07.0
....................       output_d(ZERO); 
0299:  BSF    03.5
029A:  CLRF   08
029B:  MOVLW  3F
029C:  BCF    03.5
029D:  MOVWF  08
....................       delay_ms(10); 
029E:  MOVLW  0A
029F:  MOVWF  2E
02A0:  CALL   004
....................       output_LOW(PIN_C0); 
02A1:  BCF    20.0
02A2:  MOVF   20,W
02A3:  BSF    03.5
02A4:  MOVWF  07
02A5:  BCF    03.5
02A6:  BCF    07.0
....................       output_HIGH(PIN_C1); 
02A7:  BCF    20.1
02A8:  MOVF   20,W
02A9:  BSF    03.5
02AA:  MOVWF  07
02AB:  BCF    03.5
02AC:  BSF    07.1
....................       output_d(SIETE); 
02AD:  BSF    03.5
02AE:  CLRF   08
02AF:  MOVLW  07
02B0:  BCF    03.5
02B1:  MOVWF  08
....................       delay_ms(10); 
02B2:  MOVLW  0A
02B3:  MOVWF  2E
02B4:  CALL   004
....................        
....................    } 
02B5:  INCF   23,F
02B6:  GOTO   289
....................    for(i=0;i<50;i++){ 
02B7:  CLRF   23
02B8:  MOVF   23,W
02B9:  SUBLW  31
02BA:  BTFSS  03.0
02BB:  GOTO   2E6
....................       output_LOW(PIN_C1); 
02BC:  BCF    20.1
02BD:  MOVF   20,W
02BE:  BSF    03.5
02BF:  MOVWF  07
02C0:  BCF    03.5
02C1:  BCF    07.1
....................       output_HIGH(PIN_C0); 
02C2:  BCF    20.0
02C3:  MOVF   20,W
02C4:  BSF    03.5
02C5:  MOVWF  07
02C6:  BCF    03.5
02C7:  BSF    07.0
....................       output_d(ZERO); 
02C8:  BSF    03.5
02C9:  CLRF   08
02CA:  MOVLW  3F
02CB:  BCF    03.5
02CC:  MOVWF  08
....................       delay_ms(10); 
02CD:  MOVLW  0A
02CE:  MOVWF  2E
02CF:  CALL   004
....................       output_LOW(PIN_C0); 
02D0:  BCF    20.0
02D1:  MOVF   20,W
02D2:  BSF    03.5
02D3:  MOVWF  07
02D4:  BCF    03.5
02D5:  BCF    07.0
....................       output_HIGH(PIN_C1); 
02D6:  BCF    20.1
02D7:  MOVF   20,W
02D8:  BSF    03.5
02D9:  MOVWF  07
02DA:  BCF    03.5
02DB:  BSF    07.1
....................       output_d(SEIS); 
02DC:  BSF    03.5
02DD:  CLRF   08
02DE:  MOVLW  7D
02DF:  BCF    03.5
02E0:  MOVWF  08
....................       delay_ms(10); 
02E1:  MOVLW  0A
02E2:  MOVWF  2E
02E3:  CALL   004
....................        
....................    } 
02E4:  INCF   23,F
02E5:  GOTO   2B8
....................    for(i=0;i<50;i++){ 
02E6:  CLRF   23
02E7:  MOVF   23,W
02E8:  SUBLW  31
02E9:  BTFSS  03.0
02EA:  GOTO   315
....................       output_LOW(PIN_C1); 
02EB:  BCF    20.1
02EC:  MOVF   20,W
02ED:  BSF    03.5
02EE:  MOVWF  07
02EF:  BCF    03.5
02F0:  BCF    07.1
....................       output_HIGH(PIN_C0); 
02F1:  BCF    20.0
02F2:  MOVF   20,W
02F3:  BSF    03.5
02F4:  MOVWF  07
02F5:  BCF    03.5
02F6:  BSF    07.0
....................       output_d(ZERO); 
02F7:  BSF    03.5
02F8:  CLRF   08
02F9:  MOVLW  3F
02FA:  BCF    03.5
02FB:  MOVWF  08
....................       delay_ms(10); 
02FC:  MOVLW  0A
02FD:  MOVWF  2E
02FE:  CALL   004
....................       output_LOW(PIN_C0); 
02FF:  BCF    20.0
0300:  MOVF   20,W
0301:  BSF    03.5
0302:  MOVWF  07
0303:  BCF    03.5
0304:  BCF    07.0
....................       output_HIGH(PIN_C1); 
0305:  BCF    20.1
0306:  MOVF   20,W
0307:  BSF    03.5
0308:  MOVWF  07
0309:  BCF    03.5
030A:  BSF    07.1
....................       output_d(CINCO); 
030B:  BSF    03.5
030C:  CLRF   08
030D:  MOVLW  6D
030E:  BCF    03.5
030F:  MOVWF  08
....................       delay_ms(10); 
0310:  MOVLW  0A
0311:  MOVWF  2E
0312:  CALL   004
....................        
....................    } 
0313:  INCF   23,F
0314:  GOTO   2E7
....................    for(i=0;i<50;i++){ 
0315:  CLRF   23
0316:  MOVF   23,W
0317:  SUBLW  31
0318:  BTFSS  03.0
0319:  GOTO   344
....................       output_LOW(PIN_C1); 
031A:  BCF    20.1
031B:  MOVF   20,W
031C:  BSF    03.5
031D:  MOVWF  07
031E:  BCF    03.5
031F:  BCF    07.1
....................       output_HIGH(PIN_C0); 
0320:  BCF    20.0
0321:  MOVF   20,W
0322:  BSF    03.5
0323:  MOVWF  07
0324:  BCF    03.5
0325:  BSF    07.0
....................       output_d(ZERO); 
0326:  BSF    03.5
0327:  CLRF   08
0328:  MOVLW  3F
0329:  BCF    03.5
032A:  MOVWF  08
....................       delay_ms(10); 
032B:  MOVLW  0A
032C:  MOVWF  2E
032D:  CALL   004
....................       output_LOW(PIN_C0); 
032E:  BCF    20.0
032F:  MOVF   20,W
0330:  BSF    03.5
0331:  MOVWF  07
0332:  BCF    03.5
0333:  BCF    07.0
....................       output_HIGH(PIN_C1); 
0334:  BCF    20.1
0335:  MOVF   20,W
0336:  BSF    03.5
0337:  MOVWF  07
0338:  BCF    03.5
0339:  BSF    07.1
....................       output_d(CUATRO); 
033A:  BSF    03.5
033B:  CLRF   08
033C:  MOVLW  66
033D:  BCF    03.5
033E:  MOVWF  08
....................       delay_ms(10); 
033F:  MOVLW  0A
0340:  MOVWF  2E
0341:  CALL   004
....................        
....................    } 
0342:  INCF   23,F
0343:  GOTO   316
....................    for(i=0;i<50;i++){ 
0344:  CLRF   23
0345:  MOVF   23,W
0346:  SUBLW  31
0347:  BTFSS  03.0
0348:  GOTO   373
....................       output_LOW(PIN_C1); 
0349:  BCF    20.1
034A:  MOVF   20,W
034B:  BSF    03.5
034C:  MOVWF  07
034D:  BCF    03.5
034E:  BCF    07.1
....................       output_HIGH(PIN_C0); 
034F:  BCF    20.0
0350:  MOVF   20,W
0351:  BSF    03.5
0352:  MOVWF  07
0353:  BCF    03.5
0354:  BSF    07.0
....................       output_d(ZERO); 
0355:  BSF    03.5
0356:  CLRF   08
0357:  MOVLW  3F
0358:  BCF    03.5
0359:  MOVWF  08
....................       delay_ms(10); 
035A:  MOVLW  0A
035B:  MOVWF  2E
035C:  CALL   004
....................       output_LOW(PIN_C0); 
035D:  BCF    20.0
035E:  MOVF   20,W
035F:  BSF    03.5
0360:  MOVWF  07
0361:  BCF    03.5
0362:  BCF    07.0
....................       output_HIGH(PIN_C1); 
0363:  BCF    20.1
0364:  MOVF   20,W
0365:  BSF    03.5
0366:  MOVWF  07
0367:  BCF    03.5
0368:  BSF    07.1
....................       output_d(TRES); 
0369:  BSF    03.5
036A:  CLRF   08
036B:  MOVLW  4F
036C:  BCF    03.5
036D:  MOVWF  08
....................       delay_ms(10); 
036E:  MOVLW  0A
036F:  MOVWF  2E
0370:  CALL   004
....................        
....................    } 
0371:  INCF   23,F
0372:  GOTO   345
....................    for(i=0;i<50;i++){ 
0373:  CLRF   23
0374:  MOVF   23,W
0375:  SUBLW  31
0376:  BTFSS  03.0
0377:  GOTO   3A2
....................       output_LOW(PIN_C1); 
0378:  BCF    20.1
0379:  MOVF   20,W
037A:  BSF    03.5
037B:  MOVWF  07
037C:  BCF    03.5
037D:  BCF    07.1
....................       output_HIGH(PIN_C0); 
037E:  BCF    20.0
037F:  MOVF   20,W
0380:  BSF    03.5
0381:  MOVWF  07
0382:  BCF    03.5
0383:  BSF    07.0
....................       output_d(ZERO); 
0384:  BSF    03.5
0385:  CLRF   08
0386:  MOVLW  3F
0387:  BCF    03.5
0388:  MOVWF  08
....................       delay_ms(10); 
0389:  MOVLW  0A
038A:  MOVWF  2E
038B:  CALL   004
....................       output_LOW(PIN_C0); 
038C:  BCF    20.0
038D:  MOVF   20,W
038E:  BSF    03.5
038F:  MOVWF  07
0390:  BCF    03.5
0391:  BCF    07.0
....................       output_HIGH(PIN_C1); 
0392:  BCF    20.1
0393:  MOVF   20,W
0394:  BSF    03.5
0395:  MOVWF  07
0396:  BCF    03.5
0397:  BSF    07.1
....................       output_d(DOS); 
0398:  BSF    03.5
0399:  CLRF   08
039A:  MOVLW  5B
039B:  BCF    03.5
039C:  MOVWF  08
....................       delay_ms(10); 
039D:  MOVLW  0A
039E:  MOVWF  2E
039F:  CALL   004
....................        
....................    } 
03A0:  INCF   23,F
03A1:  GOTO   374
....................    for(i=0;i<50;i++){ 
03A2:  CLRF   23
03A3:  MOVF   23,W
03A4:  SUBLW  31
03A5:  BTFSS  03.0
03A6:  GOTO   3D1
....................       output_LOW(PIN_C1); 
03A7:  BCF    20.1
03A8:  MOVF   20,W
03A9:  BSF    03.5
03AA:  MOVWF  07
03AB:  BCF    03.5
03AC:  BCF    07.1
....................       output_HIGH(PIN_C0); 
03AD:  BCF    20.0
03AE:  MOVF   20,W
03AF:  BSF    03.5
03B0:  MOVWF  07
03B1:  BCF    03.5
03B2:  BSF    07.0
....................       output_d(ZERO); 
03B3:  BSF    03.5
03B4:  CLRF   08
03B5:  MOVLW  3F
03B6:  BCF    03.5
03B7:  MOVWF  08
....................       delay_ms(10); 
03B8:  MOVLW  0A
03B9:  MOVWF  2E
03BA:  CALL   004
....................       output_LOW(PIN_C0); 
03BB:  BCF    20.0
03BC:  MOVF   20,W
03BD:  BSF    03.5
03BE:  MOVWF  07
03BF:  BCF    03.5
03C0:  BCF    07.0
....................       output_HIGH(PIN_C1); 
03C1:  BCF    20.1
03C2:  MOVF   20,W
03C3:  BSF    03.5
03C4:  MOVWF  07
03C5:  BCF    03.5
03C6:  BSF    07.1
....................       output_d(UNO); 
03C7:  BSF    03.5
03C8:  CLRF   08
03C9:  MOVLW  06
03CA:  BCF    03.5
03CB:  MOVWF  08
....................       delay_ms(10); 
03CC:  MOVLW  0A
03CD:  MOVWF  2E
03CE:  CALL   004
....................        
....................    } 
03CF:  INCF   23,F
03D0:  GOTO   3A3
....................    for(i=0;i<50;i++){ 
03D1:  CLRF   23
03D2:  MOVF   23,W
03D3:  SUBLW  31
03D4:  BTFSS  03.0
03D5:  GOTO   400
....................       output_LOW(PIN_C1); 
03D6:  BCF    20.1
03D7:  MOVF   20,W
03D8:  BSF    03.5
03D9:  MOVWF  07
03DA:  BCF    03.5
03DB:  BCF    07.1
....................       output_HIGH(PIN_C0); 
03DC:  BCF    20.0
03DD:  MOVF   20,W
03DE:  BSF    03.5
03DF:  MOVWF  07
03E0:  BCF    03.5
03E1:  BSF    07.0
....................       output_d(ZERO); 
03E2:  BSF    03.5
03E3:  CLRF   08
03E4:  MOVLW  3F
03E5:  BCF    03.5
03E6:  MOVWF  08
....................       delay_ms(10); 
03E7:  MOVLW  0A
03E8:  MOVWF  2E
03E9:  CALL   004
....................       output_LOW(PIN_C0); 
03EA:  BCF    20.0
03EB:  MOVF   20,W
03EC:  BSF    03.5
03ED:  MOVWF  07
03EE:  BCF    03.5
03EF:  BCF    07.0
....................       output_HIGH(PIN_C1); 
03F0:  BCF    20.1
03F1:  MOVF   20,W
03F2:  BSF    03.5
03F3:  MOVWF  07
03F4:  BCF    03.5
03F5:  BSF    07.1
....................       output_d(ZERO); 
03F6:  BSF    03.5
03F7:  CLRF   08
03F8:  MOVLW  3F
03F9:  BCF    03.5
03FA:  MOVWF  08
....................       delay_ms(10); 
03FB:  MOVLW  0A
03FC:  MOVWF  2E
03FD:  CALL   004
....................        
....................    } 
03FE:  INCF   23,F
03FF:  GOTO   3D2
....................     
.................... } 
....................  
....................  
.................... } 
0400:  GOTO   043
.................... } 
0401:  GOTO   043
.................... } 
....................  
....................  
0402:  SLEEP

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT NOPROTECT BROWNOUT NOLVP NOCPD NOWRT NODEBUG
