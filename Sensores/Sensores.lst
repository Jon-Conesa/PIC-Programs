CCS PCM C Compiler, Version 4.088, 5967               26-ago.-17 21:38

               Filename: C:\Users\RR JC\Desktop\Programs\Sensores\Sensores.lst

               ROM used: 106 words (1%)
                         Largest free fragment is 2048
               RAM used: 6 (2%) at main() level
                         10 (3%) worst case
               Stack:    2 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   049
0003:  NOP
....................  
.................... #include <16F877.h> 
.................... //////// Standard Header file for the PIC16F877 device //////////////// 
.................... #device PIC16F877 
.................... #list 
....................  
.................... #fuses HS,NOWDT,NOPROTECT,NOLVP 
.................... #use delay(clock=20000000) 
0004:  MOVLW  23
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  06
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  7B
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  RETLW  00
.................... #use rs232(baud=9600, xmit=PIN_C6, rcv=PIN_C7)  // Definicion del RS232 
....................  
.................... /* 
.................... void linia(){ //funcio per poder llegir els sensors de linia 
....................    int esquerra, dreta, central;  
....................    set_adc_channel(5); 
....................    delay_ms(1); 
....................    dreta = read_adc(); 
....................     
....................    set_adc_channel(6); 
....................    delay_ms(1); 
....................    central = read_adc(); 
....................     
....................    set_adc_channel(7); 
....................    delay_ms(1); 
....................    esquerra = read_adc(); 
....................     
....................    delay_ms(100); 
....................      printf("Linia:%u\n\r"central); 
.................... } 
.................... */ 
.................... void ulls(){ //funcio per poder llegir els sensor sharp 
....................    int esquerra, dreta; 
....................    set_adc_channel(2); //activem la sortida que volem llegir  
0018:  MOVLW  10
0019:  MOVWF  78
001A:  MOVF   1F,W
001B:  ANDLW  C7
001C:  IORWF  78,W
001D:  MOVWF  1F
....................    delay_ms(1); 
001E:  MOVLW  01
001F:  MOVWF  23
0020:  CALL   004
....................    dreta = read_adc(); //llegim el valor  
0021:  BSF    1F.2
0022:  BTFSC  1F.2
0023:  GOTO   022
0024:  MOVF   1E,W
0025:  MOVWF  22
....................     
....................    set_adc_channel(3); //activem l'altre sortida   
0026:  MOVLW  18
0027:  MOVWF  78
0028:  MOVF   1F,W
0029:  ANDLW  C7
002A:  IORWF  78,W
002B:  MOVWF  1F
....................    delay_ms(1); 
002C:  MOVLW  01
002D:  MOVWF  23
002E:  CALL   004
....................    esquerra = read_adc(); //llegim el valor 
002F:  BSF    1F.2
0030:  BTFSC  1F.2
0031:  GOTO   030
0032:  MOVF   1E,W
0033:  MOVWF  21
....................  
....................    delay_ms(100); 
0034:  MOVLW  64
0035:  MOVWF  23
0036:  CALL   004
....................    printf(esquerra); 
0037:  MOVF   21,W
0038:  MOVWF  04
0039:  BCF    03.7
003A:  BTFSC  22.0
003B:  BSF    03.7
003C:  MOVLW  00
003D:  IORWF  00,W
003E:  BTFSC  03.2
003F:  GOTO   046
0040:  MOVF   00,W
0041:  BTFSS  0C.4
0042:  GOTO   041
0043:  MOVWF  19
0044:  INCF   04,F
0045:  GOTO   03C
....................     
.................... } 
0046:  BCF    0A.3
0047:  BCF    0A.4
0048:  GOTO   068 (RETURN)
....................     
....................  
.................... void main(){ 
0049:  CLRF   04
004A:  BCF    03.7
004B:  MOVLW  1F
004C:  ANDWF  03,F
004D:  MOVLW  81
004E:  BSF    03.5
004F:  MOVWF  19
0050:  MOVLW  A6
0051:  MOVWF  18
0052:  MOVLW  90
0053:  BCF    03.5
0054:  MOVWF  18
0055:  BSF    03.5
0056:  BSF    1F.0
0057:  BSF    1F.1
0058:  BSF    1F.2
0059:  BCF    1F.3
....................  
....................     
....................    setup_adc(ADC_CLOCK_INTERNAL); //activem el clock intern 
005A:  BCF    03.5
005B:  BSF    1F.6
005C:  BSF    1F.7
005D:  BSF    03.5
005E:  BCF    1F.7
005F:  BCF    03.5
0060:  BSF    1F.0
....................    setup_adc_ports(ALL_ANALOG); //activem tots els pins analogics  
0061:  BSF    03.5
0062:  BCF    1F.0
0063:  BCF    1F.1
0064:  BCF    1F.2
0065:  BCF    1F.3
....................     
....................     
....................  
.................... while(1){ 
....................    ulls(); 
0066:  BCF    03.5
0067:  GOTO   018
....................  
.................... } 
0068:  GOTO   067
.................... } 
0069:  SLEEP

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT NOPROTECT BROWNOUT NOLVP NOCPD NOWRT NODEBUG
