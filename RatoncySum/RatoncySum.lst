CCS PCM C Compiler, Version 4.088, 5967               21-jul.-17 08:25

               Filename: C:\Users\zanni\Desktop\Programs\RatoncySum\RatoncySum.lst

               ROM used: 428 words (5%)
                         Largest free fragment is 2048
               RAM used: 23 (6%) at main() level
                         25 (7%) worst case
               Stack:    4 worst case (1 in main + 3 for interrupts)

*
0000:  MOVLW  01
0001:  MOVWF  0A
0002:  GOTO   176
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  MOVF   7B,W
0016:  MOVWF  27
0017:  BCF    03.7
0018:  BCF    03.5
0019:  MOVLW  8C
001A:  MOVWF  04
001B:  BTFSS  00.5
001C:  GOTO   01F
001D:  BTFSC  0C.5
001E:  GOTO   038
001F:  MOVLW  8C
0020:  MOVWF  04
0021:  BTFSS  00.0
0022:  GOTO   025
0023:  BTFSC  0C.0
0024:  GOTO   03B
0025:  MOVF   22,W
0026:  MOVWF  04
0027:  MOVF   23,W
0028:  MOVWF  77
0029:  MOVF   24,W
002A:  MOVWF  78
002B:  MOVF   25,W
002C:  MOVWF  79
002D:  MOVF   26,W
002E:  MOVWF  7A
002F:  MOVF   27,W
0030:  MOVWF  7B
0031:  MOVF   20,W
0032:  MOVWF  0A
0033:  SWAPF  21,W
0034:  MOVWF  03
0035:  SWAPF  7F,F
0036:  SWAPF  7F,W
0037:  RETFIE
0038:  BCF    0A.3
0039:  BCF    0A.4
003A:  GOTO   03E
003B:  BCF    0A.3
003C:  BCF    0A.4
003D:  GOTO   0AE
.................... #include <16F877.h> 
.................... //////// Standard Header file for the PIC16F877 device //////////////// 
.................... #device PIC16F877 
.................... #list 
....................  
.................... #fuses HS,NOWDT,NOPROTECT,NOLVP 
.................... #use delay(clock=20000000) 
*
004C:  MOVLW  32
004D:  MOVWF  04
004E:  BCF    03.7
004F:  MOVF   00,W
0050:  BTFSC  03.2
0051:  GOTO   05F
0052:  MOVLW  06
0053:  MOVWF  78
0054:  CLRF   77
0055:  DECFSZ 77,F
0056:  GOTO   055
0057:  DECFSZ 78,F
0058:  GOTO   054
0059:  MOVLW  7B
005A:  MOVWF  77
005B:  DECFSZ 77,F
005C:  GOTO   05B
005D:  DECFSZ 00,F
005E:  GOTO   052
005F:  RETLW  00
.................... #use rs232(baud=9600, xmit=PIN_C6, rcv=PIN_C7)  // Definicion del RS232 
....................  
....................  
.................... int udreta; 
.................... int uesquerra; 
.................... int ldreta; 
.................... int lesquerra; 
.................... int lcentral; 
.................... char opcio;     
.................... int aux=0;                      
*
0187:  BCF    03.5
0188:  CLRF   2F
....................  
....................  
.................... void linia(){ //funcio per poder llegir els sensors de linia 
....................    set_adc_channel(5); 
*
0060:  MOVLW  28
0061:  MOVWF  78
0062:  MOVF   1F,W
0063:  ANDLW  C7
0064:  IORWF  78,W
0065:  MOVWF  1F
....................    delay_ms(1); 
0066:  MOVLW  01
0067:  MOVWF  32
0068:  CALL   04C
....................    ldreta = read_adc(); 
0069:  BSF    1F.2
006A:  BTFSC  1F.2
006B:  GOTO   06A
006C:  MOVF   1E,W
006D:  MOVWF  2B
....................     
....................    set_adc_channel(6); 
006E:  MOVLW  30
006F:  MOVWF  78
0070:  MOVF   1F,W
0071:  ANDLW  C7
0072:  IORWF  78,W
0073:  MOVWF  1F
....................    delay_ms(1); 
0074:  MOVLW  01
0075:  MOVWF  32
0076:  CALL   04C
....................    lcentral = read_adc(); 
0077:  BSF    1F.2
0078:  BTFSC  1F.2
0079:  GOTO   078
007A:  MOVF   1E,W
007B:  MOVWF  2D
....................     
....................    set_adc_channel(7); 
007C:  MOVLW  38
007D:  MOVWF  78
007E:  MOVF   1F,W
007F:  ANDLW  C7
0080:  IORWF  78,W
0081:  MOVWF  1F
....................    delay_ms(1); 
0082:  MOVLW  01
0083:  MOVWF  32
0084:  CALL   04C
....................    lesquerra = read_adc(); 
0085:  BSF    1F.2
0086:  BTFSC  1F.2
0087:  GOTO   086
0088:  MOVF   1E,W
0089:  MOVWF  2C
....................     
....................    delay_ms(100); 
008A:  MOVLW  64
008B:  MOVWF  32
008C:  CALL   04C
....................  
.................... } 
008D:  RETLW  00
.................... void ulls(){ //funcio per poder llegir els sensor sharp 
....................     
....................    set_adc_channel(2); //activem la sortida que volem llegir  
008E:  MOVLW  10
008F:  MOVWF  78
0090:  MOVF   1F,W
0091:  ANDLW  C7
0092:  IORWF  78,W
0093:  MOVWF  1F
....................    delay_ms(1); 
0094:  MOVLW  01
0095:  MOVWF  32
0096:  CALL   04C
....................    udreta = read_adc(); //llegim el valor  
0097:  BSF    1F.2
0098:  BTFSC  1F.2
0099:  GOTO   098
009A:  MOVF   1E,W
009B:  MOVWF  29
....................     
....................    set_adc_channel(3); //activem l'altre sortida   
009C:  MOVLW  18
009D:  MOVWF  78
009E:  MOVF   1F,W
009F:  ANDLW  C7
00A0:  IORWF  78,W
00A1:  MOVWF  1F
....................    delay_ms(1); 
00A2:  MOVLW  01
00A3:  MOVWF  32
00A4:  CALL   04C
....................    uesquerra = read_adc(); //llegim el valor 
00A5:  BSF    1F.2
00A6:  BTFSC  1F.2
00A7:  GOTO   0A6
00A8:  MOVF   1E,W
00A9:  MOVWF  2A
....................  
....................    delay_ms(100); 
00AA:  MOVLW  64
00AB:  MOVWF  32
00AC:  CALL   04C
....................     
.................... } 
00AD:  RETLW  00
.................... #int_rda 
.................... void serial_isr() { 
....................   if(kbhit()){ 
*
003E:  BTFSS  0C.5
003F:  GOTO   048
....................     opcio=getc(); 
0040:  BTFSS  0C.5
0041:  GOTO   040
0042:  MOVF   1A,W
0043:  MOVWF  2E
....................      
....................     putchar(opcio); 
0044:  MOVF   2E,W
0045:  BTFSS  0C.4
0046:  GOTO   045
0047:  MOVWF  19
....................        
....................     } 
....................     
....................     
....................   } 
0048:  BCF    0C.5
0049:  BCF    0A.3
004A:  BCF    0A.4
004B:  GOTO   025
....................   #INT_TIMER1 
.................... void isr_timer1(){ 
.................... linia(); 
*
00AE:  CALL   060
.................... ulls(); 
00AF:  CALL   08E
.................... while(ldreta > 200 || lesquerra > 200 || lcentral > 200){ 
00B0:  MOVF   2B,W
00B1:  SUBLW  C8
00B2:  BTFSS  03.0
00B3:  GOTO   0BC
00B4:  MOVF   2C,W
00B5:  SUBLW  C8
00B6:  BTFSS  03.0
00B7:  GOTO   0BC
00B8:  MOVF   2D,W
00B9:  SUBLW  C8
00BA:  BTFSC  03.0
00BB:  GOTO   12C
.................... switch(aux){ 
00BC:  MOVF   2F,W
00BD:  BTFSC  03.2
00BE:  GOTO   0C3
00BF:  XORLW  01
00C0:  BTFSC  03.2
00C1:  GOTO   0D2
00C2:  GOTO   0E0
....................          case 0: 
....................             output_high(PIN_B1); 
00C3:  BSF    03.5
00C4:  BCF    06.1
00C5:  BCF    03.5
00C6:  BSF    06.1
....................             output_high(PIN_B2); 
00C7:  BSF    03.5
00C8:  BCF    06.2
00C9:  BCF    03.5
00CA:  BSF    06.2
....................             set_timer1(63973); 
00CB:  MOVLW  F9
00CC:  MOVWF  0F
00CD:  MOVLW  E5
00CE:  MOVWF  0E
....................             aux=1; 
00CF:  MOVLW  01
00D0:  MOVWF  2F
....................             break; 
00D1:  GOTO   0E0
....................           
....................          case 1: 
....................             output_low(PIN_B1); 
00D2:  BSF    03.5
00D3:  BCF    06.1
00D4:  BCF    03.5
00D5:  BCF    06.1
....................             output_low(PIN_B2); 
00D6:  BSF    03.5
00D7:  BCF    06.2
00D8:  BCF    03.5
00D9:  BCF    06.2
....................             set_timer1(54598); 
00DA:  MOVLW  D5
00DB:  MOVWF  0F
00DC:  MOVLW  46
00DD:  MOVWF  0E
....................             aux=0; 
00DE:  CLRF   2F
....................             break; 
00DF:  GOTO   0E0
....................       } 
.................... linia(); 
00E0:  CALL   060
.................... ulls(); 
00E1:  CALL   08E
.................... if(udreta >= 70 || uesquerra >= 70){ 
00E2:  MOVF   29,W
00E3:  SUBLW  45
00E4:  BTFSS  03.0
00E5:  GOTO   0EA
00E6:  MOVF   2A,W
00E7:  SUBLW  45
00E8:  BTFSC  03.0
00E9:  GOTO   12B
.................... while(udreta >= 70 || uesquerra >= 70){ 
00EA:  MOVF   29,W
00EB:  SUBLW  45
00EC:  BTFSS  03.0
00ED:  GOTO   0F2
00EE:  MOVF   2A,W
00EF:  SUBLW  45
00F0:  BTFSC  03.0
00F1:  GOTO   12B
....................     
....................       switch(aux){ 
00F2:  MOVF   2F,W
00F3:  BTFSC  03.2
00F4:  GOTO   0F9
00F5:  XORLW  01
00F6:  BTFSC  03.2
00F7:  GOTO   104
00F8:  GOTO   10E
....................          case 0: 
....................             output_high(PIN_B1); 
00F9:  BSF    03.5
00FA:  BCF    06.1
00FB:  BCF    03.5
00FC:  BSF    06.1
....................             set_timer1(63973); 
00FD:  MOVLW  F9
00FE:  MOVWF  0F
00FF:  MOVLW  E5
0100:  MOVWF  0E
....................             aux=1; 
0101:  MOVLW  01
0102:  MOVWF  2F
....................             break; 
0103:  GOTO   10E
....................           
....................          case 1: 
....................             output_low(PIN_B1); 
0104:  BSF    03.5
0105:  BCF    06.1
0106:  BCF    03.5
0107:  BCF    06.1
....................             set_timer1(54598); 
0108:  MOVLW  D5
0109:  MOVWF  0F
010A:  MOVLW  46
010B:  MOVWF  0E
....................             aux=0; 
010C:  CLRF   2F
....................             break; 
010D:  GOTO   10E
....................       } 
....................       switch(aux){ 
010E:  MOVF   2F,W
010F:  BTFSC  03.2
0110:  GOTO   115
0111:  XORLW  01
0112:  BTFSC  03.2
0113:  GOTO   120
0114:  GOTO   12A
....................          case 0: 
....................             output_high(PIN_B2); 
0115:  BSF    03.5
0116:  BCF    06.2
0117:  BCF    03.5
0118:  BSF    06.2
....................             set_timer1(65223); 
0119:  MOVLW  FE
011A:  MOVWF  0F
011B:  MOVLW  C7
011C:  MOVWF  0E
....................             aux=1; 
011D:  MOVLW  01
011E:  MOVWF  2F
....................             break; 
011F:  GOTO   12A
....................           
....................          case 1: 
....................             output_low(PIN_B2); 
0120:  BSF    03.5
0121:  BCF    06.2
0122:  BCF    03.5
0123:  BCF    06.2
....................             set_timer1(53348); 
0124:  MOVLW  D0
0125:  MOVWF  0F
0126:  MOVLW  64
0127:  MOVWF  0E
....................             aux=0; 
0128:  CLRF   2F
....................             break; 
0129:  GOTO   12A
....................       } 
....................        
....................        
....................     
.................... } 
012A:  GOTO   0EA
.................... } 
.................... } 
012B:  GOTO   0B0
.................... linia(); 
012C:  CALL   060
.................... while(ldreta < 100 || lesquerra < 100 || lcentral < 100){ 
012D:  MOVF   2B,W
012E:  SUBLW  63
012F:  BTFSC  03.0
0130:  GOTO   139
0131:  MOVF   2C,W
0132:  SUBLW  63
0133:  BTFSC  03.0
0134:  GOTO   139
0135:  MOVF   2D,W
0136:  SUBLW  63
0137:  BTFSS  03.0
0138:  GOTO   172
.................... switch(aux){ 
0139:  MOVF   2F,W
013A:  BTFSC  03.2
013B:  GOTO   140
013C:  XORLW  01
013D:  BTFSC  03.2
013E:  GOTO   14B
013F:  GOTO   155
....................          case 0: 
....................             output_high(PIN_B2); 
0140:  BSF    03.5
0141:  BCF    06.2
0142:  BCF    03.5
0143:  BSF    06.2
....................             set_timer1(63973); 
0144:  MOVLW  F9
0145:  MOVWF  0F
0146:  MOVLW  E5
0147:  MOVWF  0E
....................             aux=1; 
0148:  MOVLW  01
0149:  MOVWF  2F
....................             break; 
014A:  GOTO   155
....................           
....................          case 1: 
....................             output_low(PIN_B2); 
014B:  BSF    03.5
014C:  BCF    06.2
014D:  BCF    03.5
014E:  BCF    06.2
....................             set_timer1(54598); 
014F:  MOVLW  D5
0150:  MOVWF  0F
0151:  MOVLW  46
0152:  MOVWF  0E
....................             aux=0; 
0153:  CLRF   2F
....................             break; 
0154:  GOTO   155
....................       } 
....................       switch(aux){ 
0155:  MOVF   2F,W
0156:  BTFSC  03.2
0157:  GOTO   15C
0158:  XORLW  01
0159:  BTFSC  03.2
015A:  GOTO   167
015B:  GOTO   171
....................          case 0: 
....................             output_high(PIN_B1); 
015C:  BSF    03.5
015D:  BCF    06.1
015E:  BCF    03.5
015F:  BSF    06.1
....................             set_timer1(65223); 
0160:  MOVLW  FE
0161:  MOVWF  0F
0162:  MOVLW  C7
0163:  MOVWF  0E
....................             aux=1; 
0164:  MOVLW  01
0165:  MOVWF  2F
....................             break; 
0166:  GOTO   171
....................           
....................          case 1: 
....................             output_low(PIN_B1); 
0167:  BSF    03.5
0168:  BCF    06.1
0169:  BCF    03.5
016A:  BCF    06.1
....................             set_timer1(53348); 
016B:  MOVLW  D0
016C:  MOVWF  0F
016D:  MOVLW  64
016E:  MOVWF  0E
....................             aux=0; 
016F:  CLRF   2F
....................             break; 
0170:  GOTO   171
....................       } 
.................... } 
0171:  GOTO   12D
.................... } 
....................  
0172:  BCF    0C.0
0173:  BCF    0A.3
0174:  BCF    0A.4
0175:  GOTO   025
.................... void main(){ 
0176:  CLRF   04
0177:  BCF    03.7
0178:  MOVLW  1F
0179:  ANDWF  03,F
017A:  MOVLW  81
017B:  BSF    03.5
017C:  MOVWF  19
017D:  MOVLW  A6
017E:  MOVWF  18
017F:  MOVLW  90
0180:  BCF    03.5
0181:  MOVWF  18
0182:  BSF    03.5
0183:  BSF    1F.0
0184:  BSF    1F.1
0185:  BSF    1F.2
0186:  BCF    1F.3
....................  
....................    delay_ms(5000); 
*
0189:  MOVLW  14
018A:  MOVWF  30
018B:  CLRF   28
018C:  BTFSC  0B.7
018D:  BSF    28.7
018E:  BCF    0B.7
018F:  MOVLW  FA
0190:  MOVWF  32
0191:  CALL   04C
0192:  BTFSC  28.7
0193:  BSF    0B.7
0194:  DECFSZ 30,F
0195:  GOTO   18B
....................    setup_adc(ADC_CLOCK_INTERNAL); //activem el clock intern 
0196:  BSF    1F.6
0197:  BSF    1F.7
0198:  BSF    03.5
0199:  BCF    1F.7
019A:  BCF    03.5
019B:  BSF    1F.0
....................    setup_adc_ports(ALL_ANALOG); //activem tots els pins analogics  
019C:  BSF    03.5
019D:  BCF    1F.0
019E:  BCF    1F.1
019F:  BCF    1F.2
01A0:  BCF    1F.3
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_8);  
01A1:  MOVLW  B5
01A2:  BCF    03.5
01A3:  MOVWF  10
....................    enable_interrupts(int_rda); 
01A4:  BSF    03.5
01A5:  BSF    0C.5
....................    enable_interrupts(INT_TIMER1); 
01A6:  BSF    0C.0
....................    enable_interrupts(global);     
01A7:  MOVLW  C0
01A8:  BCF    03.5
01A9:  IORWF  0B,F
....................     
....................     
....................     
....................  
.................... while(1){ 
....................     
.................... } 
01AA:  GOTO   1AA
.................... } 
01AB:  SLEEP

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT NOPROTECT BROWNOUT NOLVP NOCPD NOWRT NODEBUG
